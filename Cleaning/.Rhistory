stop("Predicted Probabilities and Exposure Vector Different Lengths")
}
denom <- rep(NA, nrow(df))
for(i in 1:nrow(df)){
denom[i] <- as.numeric(df[i, paste0(colname, "=", vec[i])])
}
denom
}
# create orm weights
f_w_orm <- orm.wt(f_form, imp_aim3, "fem_prop_int")
m_w_orm <- orm.wt(m_form, imp_aim3, "m_prop_int")
# Make female and male plot side by side
# make theme for tables
tt_theme <- ttheme_minimal(base_family = "Arial",
base_size = 10,
core = list(fg_params = list(hjust = 0, x = 0.1)),
colhead = list(fg_params = list(hjust = 0, x = 0.1)))
# female
# first make table
fem_bal_tab <- bal.tab(f_form, data = imp_aim3,
weights = list(OLS = get.w(f_w_ols),
CBPS = get.w(f_w_cbps),
ORM = unname(unlist(f_w_orm))),
stats = c("c"),
un = TRUE, thresholds = c(cor = .1))
bal_fem <- round(fem_bal_tab$Observations, 2) %>%
rename("Effective N" = Total) %>%
rownames_to_column(var = "Sample")
bal_fem[1, 1] <- "Unadjusted"
# get list of mean number of balanced covariates
bal_fem_cor <- tibble(OLS = rep(NA, 25),
CBPS = rep(NA, 25),
ORM = rep(NA, 25))
for(i in 1:25) {
bal_fem_cor[i, ] <- fem_bal_tab$Imputation.Balance[[i]]$Balanced.correlations[2, ]
}
# add to bal_fem
bal_fem <- bal_fem %>%
mutate(`Mean > 0.1` = c("",
mean(round(bal_fem_cor$OLS, 2)),
mean(round(bal_fem_cor$CBPS, 2)),
mean(round(bal_fem_cor$ORM, 2)))) %>%
select(Sample, `Mean > 0.1`, `Effective N`)
# make into grob
fem_tab <- tableGrob(bal_fem, theme = tt_theme, rows = NULL)
fem_tab <- gtable_add_grob(fem_tab,
grobs = rectGrob(gp = gpar(fill= NA, lwd = 2)),
t = 1, b = nrow(fem_tab), l = 1, r = ncol(fem_tab))
# now make plot
fem_love <- love.plot(f_form, data = imp_aim3,
weights = list(OLS = get.w(f_w_ols),
CBPS = get.w(f_w_cbps),
ORM = unname(unlist(f_w_orm))),
stats = c("c"), thresholds = c(cor = .1),
abs = TRUE, line = TRUE) +
annotation_custom(fem_tab,
xmin = 0.15, ymin = 28, ymax = 33) +
labs(title = "a. Female Intervention Participation",
subtitle = "Covariate balance across imputations") +
theme(text = element_text(family = "Arial"),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(hjust = 0))
# male
# first make table
m_bal_tab <- bal.tab(m_form, data = imp_aim3,
weights = list(OLS = get.w(m_w_ols),
CBPS = get.w(m_w_cbps),
ORM = unname(unlist(m_w_orm))),
stats = c("c"),
un = TRUE, thresholds = c(cor = .1))
bal_male <- round(m_bal_tab$Observations, 2) %>%
rename("Effective N" = Total) %>%
rownames_to_column(var = "Sample")
bal_male[1, 1] <- "Unadjusted"
# get list of mean number of balanced covariates
bal_m_cor <- tibble(OLS = rep(NA, 25),
CBPS = rep(NA, 25),
ORM = rep(NA, 25))
for(i in 1:25) {
bal_m_cor[i, ] <- m_bal_tab$Imputation.Balance[[i]]$Balanced.correlations[2, ]
}
# add to bal_fem
bal_male <- bal_male %>%
mutate(`Mean > 0.1` = c("",
mean(round(bal_m_cor$OLS, 2)),
mean(round(bal_m_cor$CBPS, 2)),
mean(round(bal_m_cor$ORM, 2)))) %>%
select(Sample, `Mean > 0.1`, `Effective N`)
# make itno grob
male_tab <- tableGrob(bal_male, theme = tt_theme, rows = NULL)
male_tab <- gtable_add_grob(male_tab,
grobs = rectGrob(gp = gpar(fill= NA, lwd = 2)),
t = 1, b = nrow(male_tab), l = 1, r = ncol(male_tab))
# now make plot
male_love <- love.plot(m_form, data = imp_aim3,
weights = list(OLS = get.w(m_w_ols),
CBPS = get.w(m_w_cbps),
ORM = unname(unlist(m_w_orm))),
stats = c("c"), thresholds = c(cor = .1),
abs = TRUE, line = TRUE) +
annotation_custom(male_tab,
xmin = 0.15, ymin = 28, ymax = 33) +
labs(title = "b. Male Intervention Participation",
subtitle = "Covariate balance across imputations") +
theme(text = element_text(family = "Arial"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(hjust = 0))
# combine
ggarrange(fem_love, male_love, nrow = 1,
widths = c(1, 0.5),
common.legend = TRUE,
legend = "bottom")
ggsave("fig17.pdf", width = 15, height = 10)
embed_fonts("fig17.pdf")
# females
# cbps
f_prim_mod_cbps_wt <- with(f_w_cbps,
glmer(Y_imp ~ skills_comp.female + peer_comp.female + m_prop_int + (1 | clinic.female),
family = binomial))
# pool and summarize
f_prim_cbps <- f_prim_mod_cbps_wt %>%
pool() %>%
summary()
f_prim_cbps
# males
# orm
m_prim_mod_orm_wt <- map2(complete(imp_aim3_int, "all"), m_w_orm, ~
glmer(Y_imp ~ skills_comp.male + peer_comp.male + fem_prop_int + (1 | clinic.female),
family = binomial,
data = .x,
weights = .y))
# pool and summarize
m_prim_orm <- m_prim_mod_orm_wt %>%
pool() %>%
summary()
m_prim_orm
# females
# cbps
f_lc_mod_cbps_wt <- with(f_w_cbps,
glmer(Y_lc ~ skills_comp.female + peer_comp.female + m_prop_int + (1 | clinic.female),
family = binomial))
# pool and summarize
f_lc_cbps <- f_lc_mod_cbps_wt %>%
pool() %>%
summary()
f_lc_cbps
# males
# orm
m_lc_mod_orm_wt <- map2(complete(imp_aim3_int, "all"), m_w_orm, ~
glmer(Y_lc ~ skills_comp.male + peer_comp.male + fem_prop_int + (1 | clinic.female),
family = binomial,
data = .x,
weights = .y))
# pool and summarize
m_lc_orm <- m_lc_mod_orm_wt %>%
pool() %>%
summary()
m_lc_orm
# first extract coefficients and standard errors from f_prim_cbps and m_prim_orm
# need to figure out what to do about the interaction terms later...
# create tibble (need to update names)
prim_fig18 <- tibble(Analysis = c("+1 Counseling & Skills Session", # female
"+1 Peer Session", # female
"+1 Counseling & Skills Session", # male
"+1 Peer Session"), # male
Sex = c(rep("Female", 2),
rep("Male", 2)),
coef = c(f_prim_cbps$estimate[2],
f_prim_cbps$estimate[3],
m_prim_orm$estimate[2],
m_prim_orm$estimate[3]),
se = c(f_prim_cbps$std.error[2],
f_prim_cbps$std.error[3],
m_prim_orm$std.error[2],
m_prim_orm$std.error[3])) %>%
mutate(lb = coef - (1.96*se),
ub = coef + (1.96*se),
or = exp(coef),
or_lb = exp(lb),
or_ub = exp(ub),
`Odds Ratio (95% Confidence Interval)` = paste0(round(or, 2), " (", round(or_lb, 3), ", ", round(or_ub, 3), ")"))
lc_fig18 <- tibble(Analysis = c("+1 Counseling & Skills Session", # female
"+1 Peer Session", # female
"+1 Counseling & Skills Session", # male
"+1 Peer Session"), # male
Sex = c(rep("Female", 2),
rep("Male", 2)),
coef = c(f_lc_cbps$estimate[2],
f_lc_cbps$estimate[3],
m_lc_orm$estimate[2],
m_lc_orm$estimate[3]),
se = c(f_lc_cbps$std.error[2],
f_lc_cbps$std.error[3],
m_lc_orm$std.error[2],
m_lc_orm$std.error[3])) %>%
mutate(lb = coef - (1.96*se),
ub = coef + (1.96*se),
or = exp(coef),
or_lb = exp(lb),
or_ub = exp(ub),
`Odds Ratio (95% Confidence Interval)` = paste0(round(or, 2), " (", round(or_lb, 3), ", ", round(or_ub, 3), ")"))
# now make a forestplot
tabletext <- cbind(c("", "Female Participant*", prim_fig18$Analysis[1:2], "Male Participant**", prim_fig18$Analysis[3:4]),
c("Odds Ratio (95% CI)", "Primary Analysis", prim_fig18$`Odds Ratio (95% Confidence Interval)`[1:2], "", prim_fig18$`Odds Ratio (95% Confidence Interval)`[3:4]),
c("", "Likely Case", lc_fig18$`Odds Ratio (95% Confidence Interval)`[1:2], "", lc_fig18$`Odds Ratio (95% Confidence Interval)`[3:4]))
#pdf("fig18.pdf", height = 5, width = 11)
forestplot(tabletext,
mean = cbind(c(NA, NA, prim_fig18$or[1:2], NA, prim_fig18$or[3:4]),
c(NA, NA, lc_fig18$or[1:2], NA, lc_fig18$or[3:4])),
lower = cbind(c(NA, NA, prim_fig18$or_lb[1:2], NA, prim_fig18$or_lb[3:4]),
c(NA, NA, lc_fig18$or_lb[1:2], NA, lc_fig18$or_lb[3:4])),
upper = cbind(c(NA, NA, prim_fig18$or_ub[1:2], NA, prim_fig18$or_ub[3:4]),
c(NA, NA, lc_fig18$or_ub[1:2], NA, lc_fig18$or_ub[3:4])),
is.summary = c(rep(TRUE, 2), rep(FALSE, 2),
TRUE, rep(FALSE, 2)),
xlog = TRUE,
xlab = "Propensity Score Weighted Adjusted Odds Ratio",
boxsize = 0.15,
col = fpColors(box = c("#f93800", "#64395f"),
line = c("#f93800", "#64395f")),
align = "l",
legend = c("Primary", "Likely Case"),
legend_args = fpLegend(pos = list(x = 0.85, y = 0.8)),
vertices = TRUE,
vertices.height = 0.05,
txt_gp = fpTxtGp(cex=1,
label=gpar(fontfamily="Arial"),
ticks=gpar(cex=0.75),
xlab=gpar(cex=0.9)))
#dev.off()
# embed the font
#embed_fonts("fig18.pdf")
# * using cbps weighting
# ** using orm weighting
# create models with updated covariates
f_form_sens <- formula(fem_prop_int ~ skills_prop.male + peer_prop.male + rcs(age.female, 4) +
edu_cat.female + edu_cat.male + rcs(day.female, 4) +  clinic.female +
rcs(phq9.female, 4) + rcs(phq9.male, 4) +
rcs(soc_sup_ps.female, 4) + rcs(soc_sup_ns.female, 4) + rcs(soc_sup_ps.male, 4) + rcs(soc_sup_ns.male, 4) +
rcs(stigma_com.female, 4) + rcs(stigma_pt.female, 4) + rcs(stigma_com.male, 4) + rcs(stigma_pt.male, 4) +
rcs(trust.female, 4) + rcs(hivk.female, 4) + rcs(trust.male, 4) + rcs(hivk.male, 4) +
rcs(cog_emp.female, 4) + rcs(aff_emp.female, 4) + rcs(cog_emp.male, 4) + rcs(aff_emp.male, 4))
m_form_sens <- formula(m_prop_int ~ skills_prop.female + peer_prop.female + rcs(age.male, 4) +
edu_cat.female + edu_cat.male + rcs(day.male, 4) +  clinic.female +
rcs(phq9.female, 4) + rcs(phq9.male, 4) +
rcs(soc_sup_ps.female, 4) + rcs(soc_sup_ns.female, 4) + rcs(soc_sup_ps.male, 4) + rcs(soc_sup_ns.male, 4) +
rcs(stigma_com.female, 4) + rcs(stigma_pt.female, 4) + rcs(stigma_com.male, 4) + rcs(stigma_pt.male, 4) +
rcs(trust.female, 4) + rcs(hivk.female, 4) + rcs(trust.male, 4) + rcs(hivk.male, 4) +
rcs(cog_emp.female, 4) + rcs(aff_emp.female, 4) + rcs(cog_emp.male, 4) + rcs(aff_emp.male, 4))
# Now assess weights across imputations
f_w_ols_sens <- weightthem(f_form_sens, datasets = imp_aim3, approach = "within", method = "ps")
f_w_cbps_sens <- weightthem(f_form_sens, datasets = imp_aim3, approach = "within", method = "cbps", over = FALSE)
m_w_ols_sens <- weightthem(f_form_sens, datasets = imp_aim3, approach = "within", method = "ps")
m_w_cbps_sens <- weightthem(f_form_sens, datasets = imp_aim3, approach = "within", method = "cbps", over = FALSE)
# create orm weights
f_w_orm_sens <- orm.wt(f_form_sens, imp_aim3, "fem_prop_int")
m_w_orm_sens <- orm.wt(m_form_sens, imp_aim3, "m_prop_int")
# Make female and male plot side by side
# female
# first make table
fem_bal_tab_sens <- bal.tab(f_form_sens, data = imp_aim3,
weights = list(OLS = get.w(f_w_ols_sens),
CBPS = get.w(f_w_cbps_sens),
ORM = unname(unlist(f_w_orm_sens))),
stats = c("c"),
un = TRUE, thresholds = c(cor = .1))
bal_fem_sens <- round(fem_bal_tab_sens$Observations, 2) %>%
rename("Effective N" = Total) %>%
rownames_to_column(var = "Sample")
bal_fem_sens[1, 1] <- "Unadjusted"
# get list of mean number of balanced covariates
bal_fem_cor_sens <- tibble(OLS = rep(NA, 25),
CBPS = rep(NA, 25),
ORM = rep(NA, 25))
for(i in 1:25) {
bal_fem_cor_sens[i, ] <- fem_bal_tab_sens$Imputation.Balance[[i]]$Balanced.correlations[2, ]
}
# add to bal_fem
bal_fem_sens <- bal_fem_sens %>%
mutate(`Mean > 0.1` = c("",
mean(round(bal_fem_cor_sens$OLS, 2)),
mean(round(bal_fem_cor_sens$CBPS, 2)),
mean(round(bal_fem_cor_sens$ORM, 2)))) %>%
select(Sample, `Mean > 0.1`, `Effective N`)
# make into grob
fem_tab_sens <- tableGrob(bal_fem_sens, theme = tt_theme, rows = NULL)
fem_tab_sens <- gtable_add_grob(fem_tab_sens,
grobs = rectGrob(gp = gpar(fill= NA, lwd = 2)),
t = 1, b = nrow(fem_tab_sens), l = 1, r = ncol(fem_tab_sens))
# now make plot
fem_love_sens <- love.plot(f_form_sens, data = imp_aim3,
weights = list(OLS = get.w(f_w_ols_sens),
CBPS = get.w(f_w_cbps_sens),
ORM = unname(unlist(f_w_orm_sens))),
stats = c("c"), thresholds = c(cor = .1),
abs = TRUE, line = TRUE) +
annotation_custom(fem_tab_sens,
xmin = 0.25, ymin = 49, ymax = 55) +
labs(title = "a. Female Intervention Participation",
subtitle = "Covariate balance across imputations") +
theme(text = element_text(family = "Arial"),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(hjust = 0))
# male
# first make table
m_bal_tab_sens <- bal.tab(m_form_sens, data = imp_aim3,
weights = list(OLS = get.w(m_w_ols_sens),
CBPS = get.w(m_w_cbps_sens),
ORM = unname(unlist(m_w_orm_sens))),
stats = c("c"),
un = TRUE, thresholds = c(cor = .1))
bal_male_sens <- round(m_bal_tab_sens$Observations, 2) %>%
rename("Effective N" = Total) %>%
rownames_to_column(var = "Sample")
bal_male_sens[1, 1] <- "Unadjusted"
# get list of mean number of balanced covariates
bal_male_cor_sens <- tibble(OLS = rep(NA, 25),
CBPS = rep(NA, 25),
ORM = rep(NA, 25))
for(i in 1:25) {
bal_male_cor_sens[i, ] <- m_bal_tab_sens$Imputation.Balance[[i]]$Balanced.correlations[2, ]
}
# add to bal_male
bal_male_sens <- bal_male_sens %>%
mutate(`Mean > 0.1` = c("",
mean(round(bal_male_cor_sens$OLS, 2)),
mean(round(bal_male_cor_sens$CBPS, 2)),
mean(round(bal_male_cor_sens$ORM, 2)))) %>%
select(Sample, `Mean > 0.1`, `Effective N`)
# make into grob
male_tab_sens <- tableGrob(bal_male_sens, theme = tt_theme, rows = NULL)
male_tab_sens <- gtable_add_grob(male_tab_sens,
grobs = rectGrob(gp = gpar(fill= NA, lwd = 2)),
t = 1, b = nrow(male_tab_sens), l = 1, r = ncol(male_tab_sens))
# now make plot
male_love_sens <- love.plot(m_form_sens, data = imp_aim3,
weights = list(OLS = get.w(m_w_ols_sens),
CBPS = get.w(m_w_cbps_sens),
ORM = unname(unlist(m_w_orm_sens))),
stats = c("c"), thresholds = c(cor = .1),
abs = TRUE, line = TRUE) +
annotation_custom(male_tab_sens,
xmin = 0.35, ymin = 43, ymax = 47) +
labs(title = "b. Male Intervention Participation",
subtitle = "Covariate balance across imputations") +
theme(text = element_text(family = "Arial"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(hjust = 0))
# combine
ggarrange(fem_love_sens, male_love_sens, nrow = 1,
widths = c(1, 0.5),
common.legend = TRUE,
legend = "bottom")
ggsave("fig19.pdf", width = 15, height = 10)
embed_fonts("fig19.pdf")
# now make plot
male_love_sens <- love.plot(m_form_sens, data = imp_aim3,
weights = list(OLS = get.w(m_w_ols_sens),
CBPS = get.w(m_w_cbps_sens),
ORM = unname(unlist(m_w_orm_sens))),
stats = c("c"), thresholds = c(cor = .1),
abs = TRUE, line = TRUE) +
annotation_custom(male_tab_sens,
xmin = 0.35, ymin = 35, ymax = 40) +
labs(title = "b. Male Intervention Participation",
subtitle = "Covariate balance across imputations") +
theme(text = element_text(family = "Arial"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(hjust = 0))
# combine
ggarrange(fem_love_sens, male_love_sens, nrow = 1,
widths = c(1, 0.6),
common.legend = TRUE,
legend = "bottom")
ggsave("fig19.pdf", width = 15, height = 10)
embed_fonts("fig19.pdf")
male_love_sens <- love.plot(m_form_sens, data = imp_aim3,
weights = list(OLS = get.w(m_w_ols_sens),
CBPS = get.w(m_w_cbps_sens),
ORM = unname(unlist(m_w_orm_sens))),
stats = c("c"), thresholds = c(cor = .1),
abs = TRUE, line = TRUE) +
annotation_custom(male_tab_sens,
xmin = 0.3, ymin = 35, ymax = 40) +
labs(title = "b. Male Intervention Participation",
subtitle = "Covariate balance across imputations") +
theme(text = element_text(family = "Arial"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(hjust = 0))
# combine
ggarrange(fem_love_sens, male_love_sens, nrow = 1,
widths = c(1, 0.6),
common.legend = TRUE,
legend = "bottom")
ggsave("fig19.pdf", width = 15, height = 10)
embed_fonts("fig19.pdf")
male_love_sens <- love.plot(m_form_sens, data = imp_aim3,
weights = list(OLS = get.w(m_w_ols_sens),
CBPS = get.w(m_w_cbps_sens),
ORM = unname(unlist(m_w_orm_sens))),
stats = c("c"), thresholds = c(cor = .1),
abs = TRUE, line = TRUE) +
annotation_custom(male_tab_sens,
xmin = 0.29, ymin = 35, ymax = 40) +
labs(title = "b. Male Intervention Participation",
subtitle = "Covariate balance across imputations") +
theme(text = element_text(family = "Arial"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = 0),
plot.subtitle = element_text(hjust = 0))
# combine
ggarrange(fem_love_sens, male_love_sens, nrow = 1,
widths = c(1, 0.6),
common.legend = TRUE,
legend = "bottom")
ggsave("fig19.pdf", width = 15, height = 10)
embed_fonts("fig19.pdf")
f_cbps_sens <- with(f_w_cbps_sens,
glmer(Y_imp ~ skills_comp.female + peer_comp.female + m_prop_int + (1 | clinic.female),
family = binomial)) %>%
pool() %>%
summary()
m_cbps_sens <- map2(complete(imp_aim3_int, "all"), m_w_orm_sens, ~
glmer(Y_lc ~ skills_comp.male + peer_comp.male + fem_prop_int + (1 | clinic.female),
family = binomial,
data = .x,
weights = .y)) %>%
pool() %>%
summary()
# start with sensitivity tibble
sens_tib <- tibble(Analysis = c("+1 Counseling & Skills Session", # female
"+1 Peer Session", # female
"+1 Counseling & Skills Session", # male
"+1 Peer Session"), # male
Sex = c(rep("Female", 2),
rep("Male", 2)),
coef = c(f_cbps_sens$estimate[2],
f_cbps_sens$estimate[3],
m_cbps_sens$estimate[2],
m_cbps_sens$estimate[3]),
se = c(f_cbps_sens$std.error[2],
f_cbps_sens$std.error[3],
m_cbps_sens$std.error[2],
m_cbps_sens$std.error[3])) %>%
mutate(lb = coef - (1.96*se),
ub = coef + (1.96*se),
or = exp(coef),
or_lb = exp(lb),
or_ub = exp(ub),
`Odds Ratio (95% Confidence Interval).sens` = paste0(round(or, 2), " (", round(or_lb, 3), ", ", round(or_ub, 3), ")")) %>%
select(Sex, Analysis, `Odds Ratio (95% Confidence Interval).sens`)
prim_tib <- prim_fig18 %>%
select(Sex, Analysis, `Odds Ratio (95% Confidence Interval)`)
lc_tib <- lc_fig18 %>%
select(Sex, Analysis, `Odds Ratio (95% Confidence Interval)`)
# now bind columns
tab10 <- left_join(prim_tib, lc_tib,
by = c("Sex", "Analysis"), suffix = c(".prim", ".lc")) %>%
left_join(., sens_tib,
by = c("Sex", "Analysis"))
flextable(tab10) %>%
save_as_docx("tab10", path = "tab10.docx")
e_vals <- tibble(Analysis = c("Fem.Skills",
"Fem.Peer",
"M.Skills",
"M.Peer"),
eval_est = c(NA),
eval_lb = c(NA),
eval_ub = c(NA))
for(i in 1:nrow(prim_fig17)){
e_val <- evalues.OR(est = prim_fig17$or[i], low = prim_fig17$or_lb[i], hi = prim_fig17$or_ub[i],
rare = FALSE, true = 1)
e_vals$eval_est[i] <- e_val[2, 1]
e_vals$eval_lb[i] <- e_val[2, 2]
e_vals$eval_ub[i] <- e_val[2, 3]
}
e_vals <- tibble(Analysis = c("Fem.Skills",
"Fem.Peer",
"M.Skills",
"M.Peer"),
eval_est = c(NA),
eval_lb = c(NA),
eval_ub = c(NA))
for(i in 1:nrow(prim_fig17)){
e_val <- evalues.OR(est = prim_fig18$or[i], low = prim_fig18$or_lb[i], hi = prim_fig18$or_ub[i],
rare = FALSE, true = 1)
e_vals$eval_est[i] <- e_val[2, 1]
e_vals$eval_lb[i] <- e_val[2, 2]
e_vals$eval_ub[i] <- e_val[2, 3]
}
for(i in 1:nrow(prim_fig18)){
e_val <- evalues.OR(est = prim_fig18$or[i], low = prim_fig18$or_lb[i], hi = prim_fig18$or_ub[i],
rare = FALSE, true = 1)
e_vals$eval_est[i] <- e_val[2, 1]
e_vals$eval_lb[i] <- e_val[2, 2]
e_vals$eval_ub[i] <- e_val[2, 3]
}
evalues.OR(est = prim_fig18$or[i], low = prim_fig18$or_lb[i], hi = prim_fig18$or_ub[i],
rare = FALSE, true = 1)
prim_fig18$or[i]
prim_fig18$or_lb[i]
prim_fig18$or_ub[i]
evalues.OR(est = prim_fig18$or[i], low = prim_fig18$or_lb[i], hi = prim_fig18$or_ub[i],
rare = 0, true = 1)
# plot (update manually with lower bound of CI)
bias_plot(1.06, 10)
# plot (update manually with lower bound of CI)
bias_plot(1.04, 10)
